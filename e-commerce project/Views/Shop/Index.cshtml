
@{
	ViewData["Title"] = "Index";
}

<div class="shopitems">

</div>
<div class="container">

	<div class="row mt-4" style="border-top: 1.1px #808080 solid;">
		<div class="col-12 text-center mt-md-3 pb-3">
			<h1>ТОВАРЫ</h1>
			<input type="text" class="js-range-slider" name="my_range" value="" />

		</div>
	</div>
</div>
<div class="shop__main pt-4" id="shop__main__page">
	<div class="container">
		<div class="row">

			<div class="col-sm-12 col-md-3">
				<div class="row">

					<div class="col-12  pb-4" style="border-bottom: 1px #bfbfbf solid;">
						<h4>Категории</h4>
						<a href="#" class="category__item">Adidas</a><br />
						<a href="#" class="category__item">Nike</a><br />
						<a href="#" class="category__item">Puma</a>
						
					</div>
				</div>
				<div class="row mt-3">
					<div class="col-12 pb-4" style="border-bottom: 1px #bfbfbf solid;">
					</div>
				</div>
				<div class="row mt-3">
					<div class="col-12 pb-2">
						<h4>Размеры</h4>
					</div>
					<div style="margin-top:-10px;margin-left:6px;" v-for="(size, index) in sizeFilter" class="col-1 pb-4">
						<a href="#" v-on:click="sizeAddFilter(size, $event)" class="razmer__sneakers__filer mt-1" v-bind:class="(sizeFilterActive.indexOf(size) != -1) ? 'size-active' : ''">{{size}}</a>
					</div>
				</div>
				<div class="row mt-4 pb-4" style="border-bottom: 1px #bfbfbf solid;">
					<div class="col-12 text-center">
						<a href="#" v-on:click="applyFilters($event)" class="apply__categories__filters">ПРИМЕНИТЬ ФИЛЬТРЫ</a>
					</div>
				</div>
			</div>
			<div class="col-12 col-md-9">
				<div class="row">
					<div class="col-12 pt-2 pb-2 d-flex" style="border-bottom: 1px #bfbfbf solid;border-top: 1px #bfbfbf solid;">
						<p>Вы видите 12 товаров из 200</p>
						<div class="ml-auto d-flex my-auto">
							<p>Выберите</p>
							<input type="number" style="width:50px;" value="" />
						</div>
					</div>
					<div class="col-12 d-flex justify-content-center" style="border-bottom: 1px #bfbfbf solid;">
						<a class="a__item__page back" href="#"><i class="fa fa-angle-left"></i></a>
						<a class="a__item__page" href="#">1</a>
						<a class="a__item__page" href="#">2</a>
						<a class="a__item__page" href="#">3</a>
						<a class="a__item__page prev" href="#"><i class="fa fa-angle-right"></i></a>
					</div>
				</div>
				<div class="row justify-content-center" v-if="!pageIsLoad">
					<div class="col-12">

					</div>
					<div class="col-8 col-md-4 mt-3 card item__card text-center" v-for="(item, index) in items" v-if="item.isHide == 0 && item.isDelete == 0 && itemFilterIsShow[index] == 1 " style="border:none;">
						<img class="img-fluid card-img-top mx-auto mt-2" :src="item.itemImagesLinks[0]" alt="">

						<p class="item__name">{{ item.name }}</p>
						<div>
							<a class="razmer__sneakers ml-1" v-for="(razmer, indexRazmer) in Object.values(item.sizesDictionary)" v-if="razmer > 0" v-bind:class="(razmer > 0 && razmer < 4) ? 'razmer__sneakers_end' : ''" href="#">{{Object.keys(item.sizesDictionary)[indexRazmer]}}</a>
						</div>
						<p class="item__price mt-1 pb-2 pb-md-0">
							<strike v-if="item.discount != 0" class="strile__old_price">{{ item.price | moneyFormat}} руб</strike> &nbsp;
							<span v-if="item.discount != 0" class="price_with_sale">{{ (item.price * ( 100 - item.discount) / 100).toFixed() | moneyFormat }} руб</span>
							<span v-else="item.discount != 0" class="price__discountnone">{{ item.price | moneyFormat }} руб</span>
						</p>
						<div class="row mb-2">
							<div class="col-12 justify-content-center mt-md-2">
								<a v-on:click="buyItem(item.id)" class="item__btn__info">КУПИТЬ</a>
								<a href="#">
									<i class="ml-3 fa fa-heart item__fa"></i>
								</a>
								<a href="#">
									<i class="ml-3 fa fa-shopping-cart item__fa"></i>
								</a>

							</div>
						</div>
					</div>
				</div>
				<div class="row justify-content-center" style="height:450px;" v-else="">
					<div class="spinner-border text-success my-auto " style="width: 5rem; height: 5rem; font-size:25px;" role="status">
						<span class="sr-only">Loading...</span>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>
@section Scripts{
	<script type="text/javascript">
		$(".js-range-slider").ionRangeSlider({
        type: "double",
        min: 0,
        max: 15000,
        from: 1,
        to: 15000,
			grid: true,
		onChange: function (data) {
			shop.priceFilterMin = data.from;
			shop.priceFilterMax = data.to;
        },
    });
		var shop = new Vue({
			el: '#shop__main__page',
			data: {
				items: [],
				itemFilterIsShow: [],
				pageIsLoad: false,

				priceFilterMin: 0,
				priceFilterMax: 15000,

				sizeFilter: [],
				sizeFilterActive: [],
			},
			mounted() {
				this.pageIsLoad = true;
				$.ajax({
					type: 'GET',
					url: '/Admin/GetAllItemsInShop',
					async: true,
					success: (res) => {
						this.items = res;

						res.forEach((element) => {
							this.itemFilterIsShow.push(1);
							var sizes = [];
							sizes = element.sizesDictionary;
							for (var size in sizes) {
								if (sizes[size] != 0 && this.sizeFilter.indexOf(size) == -1) {
									this.sizeFilter.push(size);
								}
							}
						});
					}
				});
				this.pageIsLoad = false;
			},
			methods: {
				sizeAddFilter: function (size, event) {
					event.preventDefault();
					if (this.sizeFilterActive.indexOf(size) != -1) {
						this.sizeFilterActive.splice(this.sizeFilterActive.indexOf(size), 1);
					}
					else {
						this.sizeFilterActive.push(size);
					}

				},
				applyFilters: function (event) {
					this.pageIsLoad = true;
					event.preventDefault();

					this.items.forEach((element, index) => {
						let filterPrice = false;
						let itemPrice = 0;
						if (element.discount == 0) {
							itemPrice = element.price;
						}
						else {
							console.log(element);
							itemPrice = element.price * element.discount / 100;
						}
						if (itemPrice < this.priceFilterMax && itemPrice > this.priceFilterMin) {
							filterPrice = true;
						}

						let sizeIsFind = 0;
						let countSizesFilter = this.sizeFilterActive.length;
						for (var size in element.sizesDictionary) {
							if (this.sizeFilterActive.indexOf(size) != -1 && element.sizesDictionary[size] != 0) {
								sizeIsFind++;
							}
						}
						if (countSizesFilter != sizeIsFind || !filterPrice) {
							shop.$set(shop.itemFilterIsShow, index, 0);
						}
						else {
							shop.$set(shop.itemFilterIsShow, index, 1);
						}
					})
					this.pageIsLoad = false;
				},
				buyItem: function (id) {
					window.location.replace('/Shop/Info?itemId=' + id);
				}
			},
			filters: {
				moneyFormat: function (value) {
					var mass = value.toString().split("").reverse();
					var mass2 = [];
					let j = 0;
					for (var i = 0; i < value.toString().length; i++) {
						if (j == 3) {
							mass2.push('.');
							mass2.push(mass[i]);

							j = 1;
						}
						else {
							mass2.push(mass[i]);
							j++;
						}
					}
					return mass2.reverse().join("");

				}
			}

		});
	</script>
}

